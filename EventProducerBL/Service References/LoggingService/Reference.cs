//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventProducerBL.LoggingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityEvent", Namespace="http://schemas.datacontract.org/2004/07/LoggingServiceLibrary.BL.Entities.Securit" +
        "yEvents")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EventProducerBL.LoggingService.SeveritySecurityEvent))]
    public partial class SecurityEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetectorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventProducerBL.LoggingService.EnumsDedectorType DetectorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicalLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetectorId {
            get {
                return this.DetectorIdField;
            }
            set {
                if ((this.DetectorIdField.Equals(value) != true)) {
                    this.DetectorIdField = value;
                    this.RaisePropertyChanged("DetectorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventProducerBL.LoggingService.EnumsDedectorType DetectorType {
            get {
                return this.DetectorTypeField;
            }
            set {
                if ((this.DetectorTypeField.Equals(value) != true)) {
                    this.DetectorTypeField = value;
                    this.RaisePropertyChanged("DetectorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicalLocation {
            get {
                return this.PhysicalLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalLocationField, value) != true)) {
                    this.PhysicalLocationField = value;
                    this.RaisePropertyChanged("PhysicalLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeveritySecurityEvent", Namespace="http://schemas.datacontract.org/2004/07/LoggingServiceLibrary.BL.Entities.Securit" +
        "yEvents")]
    [System.SerializableAttribute()]
    public partial class SeveritySecurityEvent : EventProducerBL.LoggingService.SecurityEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EventProducerBL.LoggingService.EnumsSeverity SeverityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EventProducerBL.LoggingService.EnumsSeverity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.DedectorType", Namespace="http://schemas.datacontract.org/2004/07/LoggingServiceLibrary.Utils")]
    public enum EnumsDedectorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fire = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Security = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.Severity", Namespace="http://schemas.datacontract.org/2004/07/LoggingServiceLibrary.Utils")]
    public enum EnumsSeverity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoggingService.ILoggingService")]
    public interface ILoggingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggingService/LogSecurityEvent", ReplyAction="http://tempuri.org/ILoggingService/LogSecurityEventResponse")]
        void LogSecurityEvent(EventProducerBL.LoggingService.SecurityEvent securityEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggingService/LogSecurityEvent", ReplyAction="http://tempuri.org/ILoggingService/LogSecurityEventResponse")]
        System.Threading.Tasks.Task LogSecurityEventAsync(EventProducerBL.LoggingService.SecurityEvent securityEvent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggingServiceChannel : EventProducerBL.LoggingService.ILoggingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggingServiceClient : System.ServiceModel.ClientBase<EventProducerBL.LoggingService.ILoggingService>, EventProducerBL.LoggingService.ILoggingService {
        
        public LoggingServiceClient() {
        }
        
        public LoggingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void LogSecurityEvent(EventProducerBL.LoggingService.SecurityEvent securityEvent) {
            base.Channel.LogSecurityEvent(securityEvent);
        }
        
        public System.Threading.Tasks.Task LogSecurityEventAsync(EventProducerBL.LoggingService.SecurityEvent securityEvent) {
            return base.Channel.LogSecurityEventAsync(securityEvent);
        }
    }
}
